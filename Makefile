# for putting on an FPGA to test

CMD_PREFIX=docker run --rm -ti --platform linux/arm64 -v $(PWD):/src --workdir /src -e PDK_ROOT=/opt/pdk davidsiaw/ocs
YOSYS=$(CMD_PREFIX) yosys
NEXTPNR_GOWIN=$(CMD_PREFIX) nextpnr-gowin
GOWIN_PACK=$(CMD_PREFIX) gowin_pack
VERILOG_FILES=$(filter-out src/tb.v, $(wildcard src/*.v))

GOWIN_FPGA_CST=fpga/tangnano9k.cst

obj/test.ys: $(VERILOG_FILES)
	mkdir -p obj
	rm -f $@
	echo "# this file is generated by the makefile" > $@
	for number in $^ ; do \
	    echo "read_verilog $$number" >> $@ ; \
	done
	echo "hierarchy -check -top stack_cpu" >> $@
	echo "proc" >> $@
	echo "flatten" >> $@
	echo "clean -purge" >> $@

obj/test.json: obj/test.ys
	echo "synth_gowin -json" $@ >> $<
	$(YOSYS) $< | tee obj/yosys.log

obj/gowin_pnr_test.json: obj/test.json $(GOWIN_FPGA_CST)
	$(NEXTPNR_GOWIN) --json $< --write $@ --device GW1NR-LV9QN88PC6/I5 --cst $(GOWIN_FPGA_CST) | tee obj/nextpnr_gowin.log

obj/gowin_pack.fs: obj/gowin_pnr_test.json
	$(GOWIN_PACK) -d GW1N-9C -o $@ $< | tee obj/gowin_pack.log

upload_gowin: gowin
	openFPGALoader -b tangnano9k obj/gowin_pack.fs

gowin: obj/gowin_pack.fs

test:
	sh test.sh

clean:
	rm -rf obj

.PHONY: clean gowin test
